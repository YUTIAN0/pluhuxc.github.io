---
layout: post
title: Install the slackwarearm on android
tags: [android, slackware, linux, arm]
author: luhux
comment: true
---

### Your Android must be Rooted

1. configure adb 

turn your android phone network adb on

pic

    $ adb connnect Android's_ip

gif

accept the debug

pic

2. open adb shell and download rootfs

    $ adb shell

gif

    android $ su
    android # cd /data
    android # mkdir slackware
    android # wget http://ftp.arm.slackware.com/slackwarearm/slackwarearm-devtools/minirootfs/roots/slack-current-miniroot_01Jul18.tar.xz

gif

3. unpack rootfs and configure chroot

    android # cd /data/slackware
    android # xz -d slack-*  # unpack rootfs
    android # tar xf slack-*  # unpack rootfs
    android # rm -rf /data/slackware/dev/*  # remove unuse file
    android # cp /etc/hosts /data/slackware/etc/  # copy network config file
    android # cp /etc/resolv.conf /data/slackware/etc/  # copy dns config file

4. login to chroot and set group

    android # cd /data/slackware 
    android # mount -o bind /dev/ dev  # mount the devfs
    android # mount -o bind /dev/pts dev/pts # mount the dev/pts
    android # mount -o bind /sys/ sys   # mount the sysfs
    android # mount -o bind /proc/ proc  # mount the proc
    android # unset LD_PRELOAD  # unload the LD_PRELOAD
    android # chroot /data/slackware  # chroot to slackware

chroot to slackware

    bash # source /etc/profile  # read the PATH
    root@localhost # useradd -s /bin/false -u 3003 -M aid_inet # add the inet user and group
    root@localhost # useradd -s /bin/fasle -u 3004 -M aid_net_raw # add the inet_raw user and group
    root@localhost # groupmod -g 3003 aid_inet  # change gid
    root@localhost # groupmod -g 3004 aid_net_raw  # change gid
    root@localhost # usermod -G aid_inet root  # add root
    root@localhost # usermod -G aid_net_raw root  # add root
    
add the new user

    root@localhost # adduser # set your simple user
    root@localhost # usermod -G aid_inet yourusername # accept the user to use socket
    root@localhost # usermod -G aid_net_raw yourname  # accept the user to use raw_socket example :ping
    
## if you need use the socket appcat

you need add the yunxing yonghu to aid\_inet group 
example:

xrdp:

    usermod -G aid_inet xrdp

5. exit and make a script

    root@localhost # exit
    android # cd /data/slackware 
    android # umount dev/pts
    android # umount dev
    android # umount sys
    android # umount proc

    android # cd /data/slackware
    android # touch start.sh
    android # chmod 0755 start.sh
    android # echo '#!/system/bin/sh' >> start.sh  # script header
    android # echo 'cd /data/slackware' >> start.sh  # cd to the rootfs dir
    android # echo 'mount -o bind /dev/pts dev/pts' >> start.sh # mount the dev/pts
    android # echo 'mount -o bind /dev/ dev' >> start.sh # mount the devfs
    android # echo 'mount -o bind /sys/ sys' >> start.sh  # mount the sysfs
    android # echo 'mount -o bind /proc/ proc' >> start.sh  # mount the proc
    android # echo 'unset LD_PRELOAD' >> start.sh  # unload the LD_PRELOAD
    android # echo 'chroot /data/slackware'  # chroot to slackware
    android # #script is end

the stop script is test

if have process runn in the rootfs 

the script can't umount 

umount please use android reboot
 
    android # cd /data/slackware
    android # touch stop.sh
    android # chmod 0755 stop.sh
    android # echo 'umount /data/slackware/dev/pts >> stop.sh  # umount the pts
    android # echo 'umount /data/slackware/dev' >> stop.sh # umount the devfs
    android # echo 'umount /data/slackware/sys' >> stop.sh  # umount the sysfs
    android # echo 'umount /data/slackware/proc' >> stop.sh  # umount the proc
    android # #script is end

the install is finish

6. use the slackware

start the system and ssh :

    android # cd /data/slackware
    android # sh start.sh
    root@localhost # /etc/rc.d/rc.sshd start

stop the system :

    android # reboot
